@model Sub_Application_1.DTOs.UpdatePostDto
<main>
@{
	ViewData["Title"] = "Edit Post";
	var imagePath = ViewData["ImagePath"] as string; // Existing image path
	var isImagePost = !string.IsNullOrEmpty(imagePath); // Determine post type
}

<div class="container mt-5">
	<h2>@(isImagePost ? "Edit Image Post" : "Edit Text Post")</h2>

	<!-- Alerts for Success or Error -->
	@if (ViewData["Error"] != null)
	{
		<div class="alert alert-danger">@ViewData["Error"]</div>
	}
	@if (ViewData["Success"] != null)
	{
		<div class="alert alert-success">@ViewData["Success"]</div>
	}

	<!-- Form for Editing the Post -->
	<form asp-action="EditPost" method="post" enctype="multipart/form-data">
		<!-- Conditional Rendering: Image Post -->
		@if (isImagePost)
		{
			<!-- Image Post -->
			<div class="form-group row mb-4">
				<label for="ImageFile" class="col-sm-2 col-form-label">Upload New Image</label>
				<div class="col-sm-10">
					<input type="file" id="ImageFile" name="ImageFile" class="form-control" accept="image/*"
						onchange="updatePreview()" />

					<!-- Image Preview -->
					<div class="mt-3">
						<img id="previewImage" src="@imagePath" alt="Preview" class="img-fluid"
							style="max-height: 200px; max-width: 200px;" />
					</div>
				</div>
			</div>
		}
		else
		{
			<!-- Conditional Rendering: Text Post -->
			<div class="form-group row mb-3">
				<label for="TextContent" class="col-sm-2 col-form-label">Text Content</label>
				<div class="col-sm-10">
					<textarea id="TextContent" name="TextContent" class="form-control" rows="5"
						placeholder="Enter your text content" required>@(Model.TextContent)</textarea>
				</div>
			</div>

			<!-- Font Size -->
			<div class="form-group row mb-3">
				<label for="FontSize" class="col-sm-2 col-form-label">Font Size</label>
				<div class="col-sm-10">
					<input type="number" id="FontSize" name="FontSize" class="form-control" value="@Model.FontSize" min="10"
						max="72" required />
				</div>
			</div>

			<!-- Text Color -->
			<div class="form-group row mb-3">
				<label for="TextColor" class="col-sm-2 col-form-label">Text Color</label>
				<div class="col-sm-10">
					<input type="color" id="TextColor" name="TextColor" class="form-control" value="@Model.TextColor"
						required />
				</div>
			</div>

			<!-- Background Color -->
			<div class="form-group row mb-3">
				<label for="BackgroundColor" class="col-sm-2 col-form-label">Background Color</label>
				<div class="col-sm-10">
					<input type="color" id="BackgroundColor" name="BackgroundColor" class="form-control"
						value="@Model.BackgroundColor" required />
				</div>
			</div>
		}
		<div class="d-flex justify-content-between align-items-center mt-4">
			<!-- Submit Button -->
			<button type="submit" class="btn btn-primary">Save Changes</button>
		</div>
	</form>
		<!-- Delete Post Button -->
	<form asp-action="DeletePost" method="post" asp-route-id="@ViewData["PostId"]">
		@Html.AntiForgeryToken()
		<button type="submit" class="btn btn-danger">Delete Post</button>
	</form>

</div>

@section Scripts {
	<script>
		// Update the preview image when a new image is selected
		function updatePreview() {
			const fileInput = document.getElementById('ImageFile');
			const previewImage = document.getElementById('previewImage');

			if (fileInput.files && fileInput.files[0]) {
				const reader = new FileReader();

				// Set the preview image source to the uploaded file
				reader.onload = function (e) {
					previewImage.src = e.target.result;
				};

				reader.readAsDataURL(fileInput.files[0]);
			}
		}
	</script>
}
</main>